// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package models

import (
	json "encoding/json"
	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels(in *jlexer.Lexer, out *URL) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.URL = string(in.String())
		case "key":
			out.Key = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels(out *jwriter.Writer, in URL) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.URL))
	}
	{
		const prefix string = ",\"key\":"
		out.RawString(prefix)
		out.String(string(in.Key))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v URL) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v URL) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *URL) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *URL) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels(l, v)
}
func easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels1(in *jlexer.Lexer, out *SaveURLResp) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "key":
			out.Key = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels1(out *jwriter.Writer, in SaveURLResp) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"key\":"
		if first {
			first = false
			out.RawString(prefix[1:])
		} else {
			out.RawString(prefix)
		}
		out.String(string(in.Key))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SaveURLResp) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels1(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SaveURLResp) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels1(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SaveURLResp) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels1(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SaveURLResp) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels1(l, v)
}
func easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels2(in *jlexer.Lexer, out *SaveURLReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "url":
			out.OriginalURL = string(in.String())
		case "custom_key":
			out.CustomKey = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels2(out *jwriter.Writer, in SaveURLReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"url\":"
		out.RawString(prefix[1:])
		out.String(string(in.OriginalURL))
	}
	if in.CustomKey != "" {
		const prefix string = ",\"custom_key\":"
		out.RawString(prefix)
		out.String(string(in.CustomKey))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v SaveURLReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels2(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v SaveURLReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels2(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *SaveURLReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels2(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *SaveURLReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels2(l, v)
}
func easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels3(in *jlexer.Lexer, out *RedirectResp) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "OriginalURL":
			out.OriginalURL = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels3(out *jwriter.Writer, in RedirectResp) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"OriginalURL\":"
		out.RawString(prefix[1:])
		out.String(string(in.OriginalURL))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RedirectResp) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels3(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RedirectResp) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels3(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RedirectResp) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels3(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RedirectResp) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels3(l, v)
}
func easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels4(in *jlexer.Lexer, out *RedirectReq) {
	isTopLevel := in.IsStart()
	if in.IsNull() {
		if isTopLevel {
			in.Consumed()
		}
		in.Skip()
		return
	}
	in.Delim('{')
	for !in.IsDelim('}') {
		key := in.UnsafeFieldName(false)
		in.WantColon()
		if in.IsNull() {
			in.Skip()
			in.WantComma()
			continue
		}
		switch key {
		case "Key":
			out.Key = string(in.String())
		default:
			in.SkipRecursive()
		}
		in.WantComma()
	}
	in.Delim('}')
	if isTopLevel {
		in.Consumed()
	}
}
func easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels4(out *jwriter.Writer, in RedirectReq) {
	out.RawByte('{')
	first := true
	_ = first
	{
		const prefix string = ",\"Key\":"
		out.RawString(prefix[1:])
		out.String(string(in.Key))
	}
	out.RawByte('}')
}

// MarshalJSON supports json.Marshaler interface
func (v RedirectReq) MarshalJSON() ([]byte, error) {
	w := jwriter.Writer{}
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels4(&w, v)
	return w.Buffer.BuildBytes(), w.Error
}

// MarshalEasyJSON supports easyjson.Marshaler interface
func (v RedirectReq) MarshalEasyJSON(w *jwriter.Writer) {
	easyjson20e82cd9EncodeGithubComFedorkolmykowAvitoautoPkgModels4(w, v)
}

// UnmarshalJSON supports json.Unmarshaler interface
func (v *RedirectReq) UnmarshalJSON(data []byte) error {
	r := jlexer.Lexer{Data: data}
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels4(&r, v)
	return r.Error()
}

// UnmarshalEasyJSON supports easyjson.Unmarshaler interface
func (v *RedirectReq) UnmarshalEasyJSON(l *jlexer.Lexer) {
	easyjson20e82cd9DecodeGithubComFedorkolmykowAvitoautoPkgModels4(l, v)
}
